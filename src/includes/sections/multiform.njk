<section class="pt-medium pb-medium" data-scroll-section>
    <div class="container">
        <div class="tab-status">
          <span class="tab active">1</span>
          <span class="tab">2</span>
          <span class="tab">3</span>
          <span class="tab">4</span>
        </div>
        <form action="#">
          <div role="tab-list" class="tab-list">
            <div role="tabpanel" id="color" class="tabpanel">
              <h3>Pytanie nr 1</h3>
              <div class="row g-3">
                <div class="col-md-6">
                    <input type="text" class="form-input" placeholder="Ruby red">
                </div>
                <div class="col-md-6">
                    <input type="text" class="form-input" placeholder="Ruby red">
                </div>
              </div>
            </div>
            <div role="tabpanel" id="hobbies" class="tabpanel hidden">
              <h3>Pytanie nr 2</h3>
              <textarea name="hobbies" class="form-input" placeholder="Mountain climbing, Guitar, Skateboarding"></textarea>
            </div>
            <div role="tabpanel" id="hobbies" class="tabpanel hidden">
              <h3>Pytanie nr 3</h3>
              <textarea name="hobbies" class="form-input" placeholder="Mountain climbing, Guitar, Skateboarding"></textarea>
            </div>
            <div role="tabpanel" id="occupation" class="tabpanel hidden">
              <h3>Pytanie nr 4</h3>
              <textarea name="occupation" class="form-input" placeholder="Web Designer"></textarea>
            </div>
          </div>
            <div class="pagination">
              <a class="btn hidden" id="prev">Poprzednie</a>
              <a class="btn" id="next">Kolejne</a>
              <button class="btn btn-submit hidden" id="submit">Wy≈õlij</button>
            </div>
          </form>
    </div>
</section>

<script>

const previousButton = document.querySelector('#prev')
const nextButton = document.querySelector('#next')
const submitButton = document.querySelector('#submit')
const tabTargets = document.querySelectorAll('.tab')
const tabPanels = document.querySelectorAll('.tabpanel')
const isEmpty = (str) => !str.trim().length
let currentStep = 0

// Validate first input on load
validateEntry()

// Next: Change UI relative to current step and account for button permissions
nextButton.addEventListener('click', (event) => {
  event.preventDefault()

  // Hide current tab
  tabPanels[currentStep].classList.add('hidden')
  tabTargets[currentStep].classList.remove('active')

  // Show next tab
  tabPanels[currentStep + 1].classList.remove('hidden')
  tabTargets[currentStep + 1].classList.add('active')
  currentStep += 1
  
  validateEntry()
  updateStatusDisplay()
})

// Previous: Change UI relative to current step and account for button permissions
previousButton.addEventListener('click', (event) => {
  event.preventDefault()

  // Hide current tab
  tabPanels[currentStep].classList.add('hidden')
  tabTargets[currentStep].classList.remove('active')

  // Show previous tab
  tabPanels[currentStep - 1].classList.remove('hidden')
  tabTargets[currentStep - 1].classList.add('active')
  currentStep -= 1

  nextButton.removeAttribute('disabled')
  updateStatusDisplay()
})


function updateStatusDisplay() {
  // If on the last step, hide the next button and show submit
  if (currentStep === tabTargets.length - 1) {
    nextButton.classList.add('hidden')
    previousButton.classList.remove('hidden')
    submitButton.classList.remove('hidden')
    validateEntry()

    // If it's the first step hide the previous button
  } else if (currentStep == 0) {
    nextButton.classList.remove('hidden')
    previousButton.classList.add('hidden')
    submitButton.classList.add('hidden')
    // In all other instances display both buttons
  } else {
    nextButton.classList.remove('hidden')
    previousButton.classList.remove('hidden')
    submitButton.classList.add('hidden')
  }
}

function validateEntry() {
  let input = tabPanels[currentStep].querySelector('.form-input')
  
  // Start but disabling continue button
  nextButton.setAttribute('disabled', true)
  submitButton.setAttribute('disabled', true)
  
  // Validate on initial function fire
  setButtonPermissions(input)
  
  // Validate on input
  input.addEventListener('input', () => setButtonPermissions(input))
  // Validate if bluring from input
  input.addEventListener('blur', () => setButtonPermissions(input))
}

function setButtonPermissions(input) {
  if (isEmpty(input.value)) {
    nextButton.setAttribute('disabled', true)
    submitButton.setAttribute('disabled', true)
  } else {
    nextButton.removeAttribute('disabled')
    submitButton.removeAttribute('disabled')
  }
}

</script>